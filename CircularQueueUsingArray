// circularqueue implementation using array 


public class Main
{
	public static void main(String[] args) {
	    
	    
	    
	    QueueusingCircularArray queue = new QueueusingCircularArray(5);
	    
	    System.out.println(queue.isEmpty());
	    queue.enqueue(10);
	    queue.enqueue(20);
	    queue.dequeue();
	    queue.enqueue(40);
	    queue.enqueue(30);
	    queue.enqueue(20);
	    queue.enqueue(10);
	    
	    queue.display();
	    System.out.println(queue.isEmpty());
	   //System.out.println((0+4)%5);
	
	}
	
}

class QueueusingCircularArray{
    
    int queue[];
    int size;
    int front;
    int rear;
    
    QueueusingCircularArray(int size){
        this.size=size;
        queue=new int[size];
        front=-1;
        rear=-1;
    }
    
    public boolean isEmpty(){
        return front==-1;
    }
    
    public boolean isFull(){
        return front%size==(rear+1)%size;
    }
    
    public void enqueue(int data){
        
        if(isFull()){
            System.out.println("Queue is Full");
            return ;
        }
        
        if(front==-1 && rear==-1)
        {  
            front=0;
            rear=0;
            queue[rear]=data;
            System.out.println(data+" inserted in postion "+rear);
            return;
        }
        
        
        rear=(rear+1)%size;
        queue[rear]=data;
        System.out.println(data+" inserted in postion "+rear);
        
    }
    
    public int dequeue(){
        
        if(isEmpty()){
            System.out.println("Queue is Empty");
            return -1;
        }
        
        if(front==rear)
        {
            int temp=queue[front];
            rear=-1;
            front=-1;
            return temp;
        }
        
        int temp=queue[front];
        front=(front+1)%size;
        
        return temp;
        
    }
    
    public int peek(){
        
        if(isEmpty()){
            System.out.println("Queue is Empty");
            return -1;
        }
        
        return queue[front];
        
    }
    
    
    public void display(){
        
        if(isEmpty()){
            System.out.println("Queue is Empty");
            return ;
        }
        
        int i=front;
        
        while(i!=rear){
            System.out.print(queue[i]+" ");
            i=(i+1)%size;
        }
        System.out.print(queue[i]+"\n");
    }
    
    
}
